{"version":3,"file":"artifact-creator.js","sourceRoot":"","sources":["../../../src/test/fidelity/artifact-creator.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst {promises: fs} = require('fs');\nconst puppeteer = require('puppeteer');\nconst path = require('path');\nconst {PNG} = require('pngjs');\nconst makeDir = require('make-dir');\n\nimport {ImageComparisonAnalysis, ImageComparator, ImageComparisonConfig, GoldenConfig, ScenarioConfig, Dimensions} from './common.js';\nimport ModelViewerElementBase from '../../model-viewer-base.js';\n\nconst DEVICE_PIXEL_RATIO = 2;\n\nexport type AnalysisResults = Array<Array<ImageComparisonAnalysis>>;\n\nexport interface ScenarioRecord extends ScenarioConfig {\n  analysisResults: AnalysisResults;\n}\n\nexport class ArtifactCreator {\n  constructor(\n      protected config: ImageComparisonConfig, protected baseUrl: string) {\n    console.log('üåà Preparing to capture screenshots for fidelity comparison');\n  }\n\n  async captureAndAnalyzeScreenshots(\n      scenarioWhitelist: Set<string>|null = null) {\n    const {outputDirectory, scenarios, analysisThresholds} = this.config\n    const analyzedScenarios: Array<ScenarioConfig> = [];\n\n    for (const scenario of scenarios) {\n      const {slug, goldens, dimensions} = scenario;\n\n      if (scenarioWhitelist != null && !scenarioWhitelist.has(slug)) {\n        continue;\n      }\n\n      console.log(`\\nüé® Scenario: ${slug}`);\n\n      await makeDir(path.join(outputDirectory, slug));\n\n      const screenshot = await this.captureScreenshot(slug, dimensions);\n      const analysisResults = await this.analyze(\n          screenshot, goldens, slug, dimensions, analysisThresholds);\n\n      const scenarioRecord = Object.assign({analysisResults}, scenario);\n\n      console.log(`\\nüíæ Recording analysis`);\n\n      await fs.writeFile(\n          path.join(outputDirectory, slug, 'analysis.json'),\n          JSON.stringify(scenarioRecord));\n\n      analyzedScenarios.push(scenario);\n    }\n\n    console.log('üíæ Recording configuration');\n\n    const finalConfig: ImageComparisonConfig =\n        Object.assign({}, this.config, {scenarios: analyzedScenarios});\n\n    await fs.writeFile(\n        path.join(outputDirectory, 'config.json'), JSON.stringify(finalConfig));\n\n    return scenarios;\n  }\n\n  protected async analyze(\n      screenshot: Buffer, goldens: Array<GoldenConfig>, slug: string,\n      dimensions: Dimensions,\n      analysisThresholds: Array<number>): Promise<AnalysisResults> {\n    const analysisResults: AnalysisResults = [];\n\n    for (const goldenConfig of goldens) {\n      console.log(`\\nüîç Comparing <model-viewer> to ${goldenConfig.name}`);\n\n      const thresholdResults: Array<ImageComparisonAnalysis> = [];\n      const golden = await fs.readFile(\n          path.join(this.config.scenarioDirectory, slug, goldenConfig.file));\n\n      const screenshotImage = PNG.sync.read(screenshot).data;\n      const goldenImage = PNG.sync.read(golden).data;\n\n      const comparator =\n          new ImageComparator(screenshotImage, goldenImage, dimensions);\n\n      await fs.writeFile(\n          path.join(this.config.outputDirectory, slug, goldenConfig.file),\n          golden);\n\n      for (const threshold of analysisThresholds) {\n        console.log(`\\n  üìè Using threshold ${threshold.toFixed(1)}`);\n        const {analysis} = comparator.analyze(threshold);\n        const {\n          matchingRatio,\n          averageDistanceRatio,\n          mismatchingAverageDistanceRatio\n        } = analysis;\n\n        thresholdResults.push(analysis);\n\n        console.log(\n            `  üìä Matching pixels: ${(matchingRatio * 100).toFixed(2)}%`);\n        console.log(`  üìä Mean color distance: ${\n            (averageDistanceRatio * 100).toFixed(2)}%`);\n        console.log(`  üìä Mean color distance (mismatching pixels only): ${\n            (mismatchingAverageDistanceRatio * 100).toFixed(2)}%`);\n      }\n\n      analysisResults.push(thresholdResults);\n    }\n\n    return analysisResults;\n  }\n\n\n  async captureScreenshot(\n      slug: string, dimensions: Dimensions,\n      outputPath: string =\n          path.join(this.config.outputDirectory, slug, 'model-viewer.png')) {\n    const scaledWidth = dimensions.width / DEVICE_PIXEL_RATIO;\n    const scaledHeight = dimensions.height / DEVICE_PIXEL_RATIO;\n\n    console.log(`üöÄ Launching browser`);\n\n    const browser = await puppeteer.launch({\n      defaultViewport: {\n        width: scaledWidth,\n        height: scaledHeight,\n        deviceScaleFactor: DEVICE_PIXEL_RATIO\n      }\n    });\n\n    const page = await browser.newPage();\n    const url = `${this.baseUrl}${slug}/`;\n\n    page.on('error', (error: any) => {\n      console.log(`üö® ${error}`);\n    });\n\n    page.on('console', async (message: any) => {\n      const args =\n          await Promise.all(message.args().map((arg: any) => arg.jsonValue()));\n\n      if (args.length) {\n        console.log(`‚û°Ô∏è`, ...args);\n      }\n    });\n\n    console.log(`üó∫  Navigating to ${url}`);\n\n    await page.goto(url);\n\n    console.log(`üñå  Rendering ${slug} with <model-viewer>`);\n\n    await page.evaluate(async () => {\n      const modelViewer =\n          document.querySelector('model-viewer') as ModelViewerElementBase;\n\n      if (!modelViewer.loaded!) {\n        const modelLoads = new Promise((resolve, reject) => {\n          const timeout = setTimeout(reject, 10000);\n\n          modelViewer.addEventListener('load', () => {\n            clearTimeout(timeout);\n            resolve();\n          });\n        });\n\n        const modelVisible = new Promise((resolve, reject) => {\n          const timeout = setTimeout(reject, 10000);\n\n          modelViewer.addEventListener('model-visibility', (event) => {\n            clearTimeout(timeout);\n            if ((event as any).detail.visible) {\n              resolve();\n            } else {\n              reject();\n            }\n          });\n        });\n\n        await Promise.all([modelLoads, modelVisible]);\n      }\n    });\n\n    console.log(`üñº  Capturing screenshot`);\n\n    const screenshot = await page.screenshot({\n      path: outputPath,\n      clip: {x: 0, y: 0, width: scaledWidth, height: scaledHeight}\n    });\n\n    await browser.close();\n\n    return screenshot;\n  }\n}\n"]}