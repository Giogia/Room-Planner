{"version":3,"file":"parsers-spec.js","sourceRoot":"","sources":["../../src/test/parsers-spec.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;AAEH,OAAO,EAAC,WAAW,EAAY,MAAM,eAAe,CAAC;AAErD,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAE3B,MAAM,SAAS,GAAG,CAAC,KAAa,EAAE,OAAoB,IAAI,EAAa,EAAE,CACrE,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;AAEnC,KAAK,CAAC,SAAS,EAAE,GAAG,EAAE;IACpB,KAAK,CAAC,aAAa,EAAE,GAAG,EAAE;QACxB,IAAI,CAAC,iCAAiC,EAAE,GAAG,EAAE;YAC3C,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mCAAmC,EAAE,GAAG,EAAE;YAC7C,MAAM,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;iBAClC,EAAE,CAAC,EAAE,CAAC,GAAG,CACN,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iCAAiC,EAAE,GAAG,EAAE;YAC3C,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mCAAmC,EAAE,GAAG,EAAE;YAC7C,MAAM,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;gBACnD,SAAS,CAAC,IAAI,EAAE,GAAG,CAAC;gBACpB,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC;gBACvB,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC;gBACrB,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC;aACrB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,0BAA0B,EAAE,GAAG,EAAE;YACpC,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;iBAC5B,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oCAAoC,EAAE,GAAG,EAAE;YAC9C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACxD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;iBACrC,EAAE,CAAC,EAAE,CAAC,GAAG,CACN,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {parseValues, ValueNode} from '../parsers.js';\n\nconst expect = chai.expect;\n\nconst valueNode = (value: string, unit: string|null = null): ValueNode =>\n    ({type: 'value', value, unit});\n\nsuite('parsers', () => {\n  suite('parseValues', () => {\n    test('parses single CSS color strings', () => {\n      expect(parseValues('red')).to.be.eql([valueNode('red')]);\n    });\n\n    test('parses multiple CSS color strings', () => {\n      expect(parseValues('red #00f #00ff00'))\n          .to.be.eql(\n              [valueNode('red'), valueNode('#00f'), valueNode('#00ff00')]);\n    });\n\n    test('parses single CSS length values', () => {\n      expect(parseValues('123deg')).to.be.eql([valueNode('123', 'deg')]);\n    });\n\n    test('parses multiple CSS length values', () => {\n      expect(parseValues('10% 123deg 2rad 1mm')).to.be.eql([\n        valueNode('10', '%'),\n        valueNode('123', 'deg'),\n        valueNode('2', 'rad'),\n        valueNode('1', 'mm')\n      ]);\n    });\n\n    test('parses mixed value types', () => {\n      expect(parseValues('3.14cm red'))\n          .to.be.eql([valueNode('3.14', 'cm'), valueNode('red')]);\n    });\n\n    test('is resilient to awkward whitespace', () => {\n      expect(parseValues('   4')).to.be.eql([valueNode('4')]);\n      expect(parseValues('red ')).to.be.eql([valueNode('red')]);\n      expect(parseValues(' 1px     \\n2px #f00'))\n          .to.be.eql(\n              [valueNode('1', 'px'), valueNode('2', 'px'), valueNode('#f00')]);\n    });\n  });\n});\n"]}