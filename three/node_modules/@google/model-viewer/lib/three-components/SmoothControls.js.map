{"version":3,"file":"SmoothControls.js","sourceRoot":"","sources":["../../src/three-components/SmoothControls.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Event, EventDispatcher, PerspectiveCamera, Quaternion, Spherical, Vector2, Vector3} from 'three';\n\nimport {clamp} from '../utilities.js';\n\nexport type EventHandlingBehavior = 'prevent-all'|'prevent-handled';\nexport type InteractionPolicy = 'always-allow'|'allow-when-focused';\nexport type TouchMode = 'rotate'|'zoom';\n\nexport interface SmoothControlsOptions {\n  // The closest the camera can be to the target\n  minimumRadius?: number;\n  // The farthest the camera can be from the target\n  maximumRadius?: number;\n  // The minimum angle between model-up and the camera polar position\n  minimumPolarAngle?: number;\n  // The maximum angle between model-up and the camera polar position\n  maximumPolarAngle?: number;\n  // The minimum angle between model-forward and the camera azimuthal position\n  minimumAzimuthalAngle?: number;\n  // The maximum angle between model-forward and the camera azimuthal position\n  maximumAzimuthalAngle?: number;\n  // The minimum camera field of view in degrees\n  minimumFov?: number;\n  // The maximum camera field of view in degrees\n  maximumFov?: number;\n  // Controls when events will be cancelled (always, or only when handled)\n  eventHandlingBehavior?: EventHandlingBehavior;\n  // Controls when interaction is allowed (always, or only when focused)\n  interactionPolicy?: InteractionPolicy;\n}\n\nexport const DEFAULT_OPTIONS = Object.freeze<SmoothControlsOptions>({\n  minimumRadius: 1,\n  maximumRadius: 2,\n  minimumPolarAngle: Math.PI / 8,\n  maximumPolarAngle: Math.PI - Math.PI / 8,\n  minimumAzimuthalAngle: -Infinity,\n  maximumAzimuthalAngle: Infinity,\n  minimumFov: 20,\n  maximumFov: 45,\n  eventHandlingBehavior: 'prevent-all',\n  interactionPolicy: 'allow-when-focused'\n});\n\nconst $velocity = Symbol('v');\n\n// Internal orbital position state\nconst $spherical = Symbol('spherical');\nconst $goalSpherical = Symbol('goalSpherical');\nconst $thetaDamper = Symbol('thetaDamper');\nconst $phiDamper = Symbol('phiDamper');\nconst $radiusDamper = Symbol('radiusDamper');\nconst $fov = Symbol('fov');\nconst $goalFov = Symbol('goalFov');\nconst $fovDamper = Symbol('fovDamper');\nconst $target = Symbol('target');\n\nconst $options = Symbol('options');\nconst $upQuaternion = Symbol('upQuaternion');\nconst $upQuaternionInverse = Symbol('upQuaternionInverse');\nconst $touchMode = Symbol('touchMode');\nconst $canInteract = Symbol('canInteract');\nconst $interactionEnabled = Symbol('interactionEnabled');\nconst $zoomMeters = Symbol('zoomMeters');\nconst $userAdjustOrbit = Symbol('userAdjustOrbit');\nconst $isUserChange = Symbol('isUserChange');\nconst $isStationary = Symbol('isMoving');\nconst $moveCamera = Symbol('moveCamera');\n\n// Pointer state\nconst $pointerIsDown = Symbol('pointerIsDown');\nconst $lastPointerPosition = Symbol('lastPointerPosition');\nconst $lastTouches = Symbol('lastTouches');\n\n// Value conversion methods\nconst $pixelLengthToSphericalAngle = Symbol('pixelLengthToSphericalAngle');\nconst $sphericalToPosition = Symbol('sphericalToPosition');\nconst $twoTouchDistance = Symbol('twoTouchDistance');\n\n// Event handlers\nconst $onMouseMove = Symbol('onMouseMove');\nconst $onMouseDown = Symbol('onMouseDown');\nconst $onMouseUp = Symbol('onMouseUp');\nconst $onTouchStart = Symbol('onTouchStart');\nconst $onTouchEnd = Symbol('onTouchEnd');\nconst $onTouchMove = Symbol('onTouchMove');\nconst $onWheel = Symbol('onWheel');\nconst $onKeyDown = Symbol('onKeyDown');\nconst $handlePointerMove = Symbol('handlePointerMove');\nconst $handlePointerDown = Symbol('handlePointerDown');\nconst $handlePointerUp = Symbol('handlePointerUp');\nconst $handleWheel = Symbol('handleWheel');\nconst $handleKey = Symbol('handleKey');\n\n// Constants\nconst USER_INTERACTION_CHANGE_SOURCE = 'user-interaction';\nconst DEFAULT_INTERACTION_CHANGE_SOURCE = 'none';\nconst TOUCH_EVENT_RE = /^touch(start|end|move)$/;\nconst KEYBOARD_ORBIT_INCREMENT = Math.PI / 8;\nconst DECAY_MILLISECONDS = 50;\nconst NATURAL_FREQUENCY = 1 / DECAY_MILLISECONDS;\nconst NIL_SPEED = 0.0002 * NATURAL_FREQUENCY;\nconst TAU = 2 * Math.PI;\nconst UP = new Vector3(0, 1, 0);\n\nexport const KeyCode = {\n  PAGE_UP: 33,\n  PAGE_DOWN: 34,\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n/**\n * ChangEvents are dispatched whenever the camera position or orientation has\n * changed\n */\nexport interface ChangeEvent extends Event {\n  /**\n   * determines what was the originating reason for the change event eg user or\n   * none\n   */\n  source: string,\n}\n\n/**\n * The Damper class is a generic second-order critically damped system that does\n * one linear step of the desired length of time. The only parameter is\n * DECAY_MILLISECONDS, which should be adjustable: TODO(#580). This common\n * parameter makes all states converge at the same rate regardless of scale.\n * xNormalization is a number to provide the rough scale of x, such that\n * NIL_SPEED clamping also happens at roughly the same convergence for all\n * states.\n */\nexport class Damper {\n  private[$velocity]: number = 0;\n\n  update(\n      x: number, xGoal: number, timeStepMilliseconds: number,\n      xNormalization: number): number {\n    if (x == null) {\n      return xGoal;\n    }\n    if (timeStepMilliseconds < 0) {\n      return x;\n    }\n    // Exact solution to a critically damped second-order system, where:\n    // acceleration = NATURAL_FREQUENCY * NATURAL_FREQUENCY * (xGoal - x) -\n    // 2 * NATURAL_FREQUENCY * this[$velocity];\n    const deltaX = (x - xGoal);\n    const intermediateVelocity = this[$velocity] + NATURAL_FREQUENCY * deltaX;\n    const intermediateX = deltaX + timeStepMilliseconds * intermediateVelocity;\n    const decay = Math.exp(-NATURAL_FREQUENCY * timeStepMilliseconds);\n    const newVelocity =\n        (intermediateVelocity - NATURAL_FREQUENCY * intermediateX) * decay;\n    const acceleration =\n        -NATURAL_FREQUENCY * (newVelocity + intermediateVelocity * decay);\n    if (Math.abs(newVelocity) < NIL_SPEED * xNormalization &&\n        acceleration * deltaX >= 0) {\n      // This ensures the controls settle and stop calling this function instead\n      // of asymptotically approaching their goal.\n      this[$velocity] = 0;\n      return xGoal;\n    } else {\n      this[$velocity] = newVelocity;\n      return xGoal + intermediateX * decay;\n    }\n  }\n}\n\n/**\n * SmoothControls is a Three.js helper for adding delightful pointer and\n * keyboard-based input to a staged Three.js scene. Its API is very similar to\n * OrbitControls, but it offers more opinionated (subjectively more delightful)\n * defaults, easy extensibility and subjectively better out-of-the-box keyboard\n * support.\n *\n * One important change compared to OrbitControls is that the `update` method\n * of SmoothControls must be invoked on every frame, otherwise the controls\n * will not have an effect.\n *\n * Another notable difference compared to OrbitControls is that SmoothControls\n * does not currently support panning (but probably will in a future revision).\n *\n * Like OrbitControls, SmoothControls assumes that the orientation of the camera\n * has been set in terms of position, rotation and scale, so it is important to\n * ensure that the camera's matrixWorld is in sync before using SmoothControls.\n */\nexport class SmoothControls extends EventDispatcher {\n  private[$interactionEnabled]: boolean = false;\n\n  private[$options]: SmoothControlsOptions;\n  private[$upQuaternion] = new Quaternion();\n  private[$upQuaternionInverse] = new Quaternion();\n  private[$isUserChange] = false;\n\n  private[$spherical] = new Spherical();\n  private[$goalSpherical] = new Spherical();\n  private[$thetaDamper] = new Damper();\n  private[$phiDamper] = new Damper();\n  private[$radiusDamper] = new Damper();\n  private[$fov]: number;\n  private[$goalFov]: number;\n  private[$fovDamper] = new Damper();\n  private[$target] = new Vector3();\n\n  private[$pointerIsDown] = false;\n  private[$lastPointerPosition] = new Vector2();\n  private[$lastTouches]: TouchList;\n  private[$touchMode]: TouchMode;\n\n  private[$onMouseMove]: (event: Event) => void;\n  private[$onMouseDown]: (event: Event) => void;\n  private[$onMouseUp]: (event: Event) => void;\n  private[$onWheel]: (event: Event) => void;\n  private[$onKeyDown]: (event: Event) => void;\n\n  private[$onTouchStart]: (event: Event) => void;\n  private[$onTouchEnd]: (event: Event) => void;\n  private[$onTouchMove]: (event: Event) => void;\n\n  private[$zoomMeters] = 1;\n\n  constructor(\n      readonly camera: PerspectiveCamera, readonly element: HTMLElement) {\n    super();\n\n    this[$upQuaternion].setFromUnitVectors(camera.up, UP);\n    this[$upQuaternionInverse].copy(this[$upQuaternion]).inverse();\n\n    this[$onMouseMove] = (event: Event) =>\n        this[$handlePointerMove](event as MouseEvent);\n    this[$onMouseDown] = (event: Event) =>\n        this[$handlePointerDown](event as MouseEvent);\n    this[$onMouseUp] = (event: Event) =>\n        this[$handlePointerUp](event as MouseEvent);\n    this[$onWheel] = (event: Event) => this[$handleWheel](event as WheelEvent);\n    this[$onKeyDown] = (event: Event) =>\n        this[$handleKey](event as KeyboardEvent);\n    this[$onTouchStart] = (event: Event) =>\n        this[$handlePointerDown](event as TouchEvent);\n    this[$onTouchEnd] = (event: Event) =>\n        this[$handlePointerUp](event as TouchEvent);\n    this[$onTouchMove] = (event: Event) =>\n        this[$handlePointerMove](event as TouchEvent);\n\n    this[$options] = Object.assign({}, DEFAULT_OPTIONS);\n\n    this.setOrbit(0, Math.PI / 2, 1);\n    this.setFov(100);\n    this.jumpToGoal();\n  }\n\n  get interactionEnabled(): boolean {\n    return this[$interactionEnabled];\n  }\n\n  enableInteraction() {\n    if (this[$interactionEnabled] === false) {\n      const {element} = this;\n      element.addEventListener('mousemove', this[$onMouseMove]);\n      element.addEventListener('mousedown', this[$onMouseDown]);\n      element.addEventListener('wheel', this[$onWheel]);\n      element.addEventListener('keydown', this[$onKeyDown]);\n      element.addEventListener('touchstart', this[$onTouchStart]);\n      element.addEventListener('touchmove', this[$onTouchMove]);\n\n      self.addEventListener('mouseup', this[$onMouseUp]);\n      self.addEventListener('touchend', this[$onTouchEnd]);\n\n      this.element.style.cursor = 'grab';\n      this[$interactionEnabled] = true;\n    }\n  }\n\n  disableInteraction() {\n    if (this[$interactionEnabled] === true) {\n      const {element} = this;\n\n      element.removeEventListener('mousemove', this[$onMouseMove]);\n      element.removeEventListener('mousedown', this[$onMouseDown]);\n      element.removeEventListener('wheel', this[$onWheel]);\n      element.removeEventListener('keydown', this[$onKeyDown]);\n      element.removeEventListener('touchstart', this[$onTouchStart]);\n      element.removeEventListener('touchmove', this[$onTouchMove]);\n\n      self.removeEventListener('mouseup', this[$onMouseUp]);\n      self.removeEventListener('touchend', this[$onTouchEnd]);\n\n      element.style.cursor = '';\n      this[$interactionEnabled] = false;\n    }\n  }\n\n  /**\n   * The options that are currently configured for the controls instance.\n   */\n  get options() {\n    return this[$options];\n  }\n\n  /**\n   * Copy the spherical values that represent the current camera orbital\n   * position relative to the configured target into a provided Spherical\n   * instance. If no Spherical is provided, a new Spherical will be allocated\n   * to copy the values into. The Spherical that values are copied into is\n   * returned.\n   */\n  getCameraSpherical(target: Spherical = new Spherical()) {\n    return target.copy(this[$spherical]);\n  }\n\n  /**\n   * Returns the camera's current vertical field of view in degrees.\n   */\n  getFieldOfView(): number {\n    return this.camera.fov;\n  }\n\n  /**\n   * Configure the options of the controls. Configured options will be\n   * merged with whatever options have already been configured for this\n   * controls instance.\n   */\n  applyOptions(options: SmoothControlsOptions) {\n    Object.assign(this[$options], options);\n    // Re-evaluates clamping based on potentially new values for min/max\n    // polar, azimuth and radius:\n    this.setOrbit();\n    // Prevent interpolation in the case that any target spherical values\n    // changed (preserving OrbitalControls behavior):\n    if (this[$isStationary]()) {\n      return;\n    }\n    this[$spherical].copy(this[$goalSpherical]);\n    this[$moveCamera]();\n  }\n\n  /**\n   * Sets the non-interpolated camera parameters\n   */\n  updateIntrinsics(\n      nearPlane: number, farPlane: number, aspect: number,\n      zoomSensitivity: number) {\n    this[$zoomMeters] = zoomSensitivity;\n    this.camera.near = nearPlane;\n    this.camera.far = farPlane;\n    this.camera.aspect = aspect;\n    this.camera.updateProjectionMatrix();\n  }\n\n  /**\n   * Set the absolute orbital goal of the camera. The change will be\n   * applied over a number of frames depending on configured acceleration and\n   * dampening options.\n   *\n   * Returns true if invoking the method will result in the camera changing\n   * position and/or rotation, otherwise false.\n   */\n  setOrbit(\n      goalTheta: number = this[$goalSpherical].theta,\n      goalPhi: number = this[$goalSpherical].phi,\n      goalRadius: number = this[$goalSpherical].radius): boolean {\n    const {\n      minimumAzimuthalAngle,\n      maximumAzimuthalAngle,\n      minimumPolarAngle,\n      maximumPolarAngle,\n      minimumRadius,\n      maximumRadius\n    } = this[$options];\n\n    const {theta, phi, radius} = this[$goalSpherical];\n\n    const nextTheta =\n        clamp(goalTheta, minimumAzimuthalAngle!, maximumAzimuthalAngle!);\n    const nextPhi = clamp(goalPhi, minimumPolarAngle!, maximumPolarAngle!);\n    const nextRadius = clamp(goalRadius, minimumRadius!, maximumRadius!);\n\n    if (nextTheta === theta && nextPhi === phi && nextRadius === radius) {\n      return false;\n    }\n\n    this[$goalSpherical].theta = nextTheta;\n    this[$goalSpherical].phi = nextPhi;\n    this[$goalSpherical].radius = nextRadius;\n    this[$goalSpherical].makeSafe();\n\n    this[$isUserChange] = false;\n\n    return true;\n  }\n\n  /**\n   * Subset of setOrbit() above, which only sets the camera's radius.\n   */\n  setRadius(radius: number) {\n    this[$goalSpherical].radius = radius;\n    this.setOrbit();\n  }\n\n  /**\n   * Sets the goal field of view for the camera\n   */\n  setFov(fov: number) {\n    const {minimumFov, maximumFov} = this[$options];\n    this[$goalFov] = clamp(fov, minimumFov!, maximumFov!);\n  }\n\n  /**\n   * Sets the target the camera is pointing toward\n   */\n  setTarget(target: Vector3) {\n    if (!this[$target].equals(target)) {\n      this[$target].copy(target);\n      this[$moveCamera]();\n    }\n  }\n\n  /**\n   * Returns a copy of the target position the camera is pointed toward\n   */\n  getTarget(): Vector3 {\n    return this[$target].clone();\n  }\n\n  /**\n   * Adjust the orbital position of the camera relative to its current orbital\n   * position.\n   */\n  adjustOrbit(deltaTheta: number, deltaPhi: number, deltaRadius: number):\n      boolean {\n    const {theta, phi, radius} = this[$goalSpherical];\n\n    const goalTheta = theta - deltaTheta;\n    const goalPhi = phi - deltaPhi;\n    const goalRadius = radius + deltaRadius;\n\n    return this.setOrbit(goalTheta, goalPhi, goalRadius);\n  }\n\n  /**\n   * Move the camera instantly instead of accelerating toward the goal\n   * parameters.\n   */\n  jumpToGoal() {\n    this.update(0, 100 * DECAY_MILLISECONDS);\n  }\n\n  /**\n   * Update controls. In most cases, this will result in the camera\n   * interpolating its position and rotation until it lines up with the\n   * designated goal orbital position.\n   *\n   * Time and delta are measured in milliseconds.\n   */\n  update(_time: number, delta: number) {\n    if (this[$isStationary]()) {\n      return;\n    }\n    const {maximumPolarAngle, maximumRadius, maximumFov} = this[$options];\n\n    this[$spherical].theta = this[$thetaDamper].update(\n        this[$spherical].theta, this[$goalSpherical].theta, delta, Math.PI);\n\n    this[$spherical].phi = this[$phiDamper].update(\n        this[$spherical].phi,\n        this[$goalSpherical].phi,\n        delta,\n        maximumPolarAngle!);\n\n    this[$spherical].radius = this[$radiusDamper].update(\n        this[$spherical].radius,\n        this[$goalSpherical].radius,\n        delta,\n        maximumRadius!);\n\n    this[$fov] =\n        this[$fovDamper].update(this[$fov], this[$goalFov], delta, maximumFov!);\n\n    this[$moveCamera]();\n  }\n\n  private[$isStationary](): boolean {\n    return this[$goalSpherical].theta === this[$spherical].theta &&\n        this[$goalSpherical].phi === this[$spherical].phi &&\n        this[$goalSpherical].radius === this[$spherical].radius &&\n        this[$goalFov] === this[$fov];\n  }\n\n  private[$moveCamera]() {\n    // Derive the new camera position from the updated spherical:\n    this[$spherical].makeSafe();\n    this[$sphericalToPosition](this[$spherical], this.camera.position);\n    this.camera.lookAt(this[$target]);\n\n    if (this.camera.fov !== this[$fov]) {\n      this.camera.fov = this[$fov];\n      this.camera.updateProjectionMatrix();\n    }\n\n    const source = this[$isUserChange] ? USER_INTERACTION_CHANGE_SOURCE :\n                                         DEFAULT_INTERACTION_CHANGE_SOURCE;\n\n    this.dispatchEvent({type: 'change', source});\n  }\n\n  private get[$canInteract](): boolean {\n    if (this[$options].interactionPolicy == 'allow-when-focused') {\n      const rootNode = this.element.getRootNode() as Document | ShadowRoot;\n      return rootNode.activeElement === this.element;\n    }\n\n    return this[$options].interactionPolicy === 'always-allow';\n  }\n\n  private[$userAdjustOrbit](\n      deltaTheta: number, deltaPhi: number, deltaRadius: number): boolean {\n    const handled = this.adjustOrbit(deltaTheta, deltaPhi, deltaRadius);\n\n    this[$isUserChange] = true;\n\n    return handled;\n  }\n\n  private[$pixelLengthToSphericalAngle](pixelLength: number): number {\n    return TAU * pixelLength / this.element.clientHeight;\n  }\n\n  private[$sphericalToPosition](spherical: Spherical, position: Vector3) {\n    position.setFromSpherical(spherical);\n    position.applyQuaternion(this[$upQuaternionInverse]);\n    position.add(this[$target]);\n  }\n\n  private[$twoTouchDistance](touchOne: Touch, touchTwo: Touch): number {\n    const {clientX: xOne, clientY: yOne} = touchOne;\n    const {clientX: xTwo, clientY: yTwo} = touchTwo;\n    const xDelta = xTwo - xOne;\n    const yDelta = yTwo - yOne;\n\n    return Math.sqrt(xDelta * xDelta + yDelta * yDelta);\n  }\n\n  private[$handlePointerMove](event: MouseEvent|TouchEvent) {\n    if (!this[$pointerIsDown] || !this[$canInteract]) {\n      return;\n    }\n\n    let handled = false;\n\n    // NOTE(cdata): We test event.type as some browsers do not have a global\n    // TouchEvent contructor.\n    if (TOUCH_EVENT_RE.test(event.type)) {\n      const {touches} = event as TouchEvent;\n\n      switch (this[$touchMode]) {\n        case 'zoom':\n          if (this[$lastTouches].length > 1 && touches.length > 1) {\n            const lastTouchDistance = this[$twoTouchDistance](\n                this[$lastTouches][0], this[$lastTouches][1]);\n            const touchDistance =\n                this[$twoTouchDistance](touches[0], touches[1]);\n            const radiusDelta = -1 * this[$zoomMeters] *\n                (touchDistance - lastTouchDistance) / 10.0;\n\n            handled = this[$userAdjustOrbit](0, 0, radiusDelta);\n          }\n\n          break;\n        case 'rotate':\n          const {clientX: xOne, clientY: yOne} = this[$lastTouches][0];\n          const {clientX: xTwo, clientY: yTwo} = touches[0];\n\n          const deltaTheta = this[$pixelLengthToSphericalAngle](xTwo - xOne);\n          const deltaPhi = this[$pixelLengthToSphericalAngle](yTwo - yOne);\n\n          handled = this[$userAdjustOrbit](deltaTheta, deltaPhi, 0);\n          break;\n      }\n\n      this[$lastTouches] = touches;\n    } else {\n      const {clientX: x, clientY: y} = event as MouseEvent;\n\n      const deltaTheta =\n          this[$pixelLengthToSphericalAngle](x - this[$lastPointerPosition].x);\n      const deltaPhi =\n          this[$pixelLengthToSphericalAngle](y - this[$lastPointerPosition].y);\n\n      handled = this[$userAdjustOrbit](deltaTheta, deltaPhi, 0.0);\n\n      this[$lastPointerPosition].set(x, y);\n    }\n\n    if ((handled || this[$options].eventHandlingBehavior === 'prevent-all') &&\n        event.cancelable) {\n      event.preventDefault();\n    };\n  }\n\n  private[$handlePointerDown](event: MouseEvent|TouchEvent) {\n    this[$pointerIsDown] = true;\n\n    if (TOUCH_EVENT_RE.test(event.type)) {\n      const {touches} = event as TouchEvent;\n\n      switch (touches.length) {\n        default:\n        case 1:\n          this[$touchMode] = 'rotate';\n          break;\n        case 2:\n          this[$touchMode] = 'zoom';\n          break;\n      }\n\n      this[$lastTouches] = touches;\n    } else {\n      const {clientX: x, clientY: y} = event as MouseEvent;\n      this[$lastPointerPosition].set(x, y);\n      this.element.style.cursor = 'grabbing';\n    }\n  }\n\n  private[$handlePointerUp](_event: MouseEvent|TouchEvent) {\n    this.element.style.cursor = 'grab';\n    this[$pointerIsDown] = false;\n  }\n\n  private[$handleWheel](event: Event) {\n    if (!this[$canInteract]) {\n      return;\n    }\n\n    const deltaRadius = (event as WheelEvent).deltaY * this[$zoomMeters] / 10.0;\n\n    if ((this[$userAdjustOrbit](0, 0, deltaRadius) ||\n         this[$options].eventHandlingBehavior === 'prevent-all') &&\n        event.cancelable) {\n      event.preventDefault();\n    }\n  }\n\n  private[$handleKey](event: KeyboardEvent) {\n    // We track if the key is actually one we respond to, so as not to\n    // accidentally clober unrelated key inputs when the <model-viewer> has\n    // focus and eventHandlingBehavior is set to 'prevent-all'.\n    let relevantKey = false;\n    let handled = false;\n\n    switch (event.keyCode) {\n      case KeyCode.PAGE_UP:\n        relevantKey = true;\n        handled = this[$userAdjustOrbit](0, 0, this[$zoomMeters]);\n        break;\n      case KeyCode.PAGE_DOWN:\n        relevantKey = true;\n        handled = this[$userAdjustOrbit](0, 0, -1 * this[$zoomMeters]);\n        break;\n      case KeyCode.UP:\n        relevantKey = true;\n        handled = this[$userAdjustOrbit](0, -KEYBOARD_ORBIT_INCREMENT, 0);\n        break;\n      case KeyCode.DOWN:\n        relevantKey = true;\n        handled = this[$userAdjustOrbit](0, KEYBOARD_ORBIT_INCREMENT, 0);\n        break;\n      case KeyCode.LEFT:\n        relevantKey = true;\n        handled = this[$userAdjustOrbit](-KEYBOARD_ORBIT_INCREMENT, 0, 0);\n        break;\n      case KeyCode.RIGHT:\n        relevantKey = true;\n        handled = this[$userAdjustOrbit](KEYBOARD_ORBIT_INCREMENT, 0, 0);\n        break;\n    }\n\n    if (relevantKey &&\n        (handled || this[$options].eventHandlingBehavior === 'prevent-all') &&\n        event.cancelable) {\n      event.preventDefault();\n    }\n  }\n}\n"]}