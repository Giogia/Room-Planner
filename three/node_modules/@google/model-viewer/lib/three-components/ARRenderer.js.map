{"version":3,"file":"ARRenderer.js","sourceRoot":"","sources":["../../src/three-components/ARRenderer.ts"],"names":[],"mappings":"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","sourcesContent":["import {EventDispatcher, Matrix4, Object3D, PerspectiveCamera, Raycaster, Scene, Vector3, WebGLRenderer} from 'three';\nimport {assertIsArCandidate} from '../utilities.js';\nimport ModelScene from './ModelScene.js';\nimport Renderer from './Renderer.js';\nimport Reticle from './Reticle.js';\nimport {assertContext} from './WebGLUtils.js';\n\nconst $presentedScene = Symbol('presentedScene');\n\nconst $device = Symbol('device');\nconst $devicePromise = Symbol('devicePromise');\nconst $rafId = Symbol('rafId');\nconst $currentSession = Symbol('currentSession');\nconst $tick = Symbol('tick');\nconst $refSpace = Symbol('refSpace');\nconst $resolveCleanup = Symbol('resolveCleanup');\n\nconst $outputCanvas = Symbol('outputCanvas');\nconst $outputContext = Symbol('outputContext');\n\nconst $onWebXRFrame = Symbol('onWebXRFrame');\nconst $postSessionCleanup = Symbol('postSessionCleanup');\n\nconst matrix4 = new Matrix4();\nconst vector3 = new Vector3();\nconst originArray = new Float32Array(3);\nconst directionArray = new Float32Array(3);\n\nexport class ARRenderer extends EventDispatcher {\n  public renderer: WebGLRenderer|null;\n  public inputCanvas: HTMLCanvasElement;\n  public inputContext: WebGLRenderingContext;\n\n  public camera: PerspectiveCamera = new PerspectiveCamera();\n  public scene: Scene = new Scene();\n  public dolly: Object3D = new Object3D();\n  public reticle: Reticle = new Reticle(this.camera);\n  public raycaster: Raycaster|null = null;\n\n  private[$outputCanvas]: HTMLCanvasElement|null = null;\n  private[$outputContext]: WebGLRenderingContext|null = null;\n  private[$rafId]: number|null = null;\n  private[$currentSession]: XRSession|null = null;\n  private[$refSpace]: XRCoordinateSystem|null = null;\n  private[$presentedScene]: ModelScene|null = null;\n  private[$resolveCleanup]: ((...args: any[]) => void)|null = null;\n  private[$device]: XRDevice|null = null;\n  private[$devicePromise]: Promise<void|XRDevice>;\n\n  /**\n   * Given an inline Renderer, construct an ARRenderer and return it\n   */\n  static fromInlineRenderer(renderer: Renderer) {\n    return new ARRenderer(renderer.canvas, renderer.context!);\n  }\n\n  constructor(\n      inputCanvas: HTMLCanvasElement, inputContext: WebGLRenderingContext) {\n    super();\n\n    this.renderer = null;\n\n    this.inputCanvas = inputCanvas;\n    this.inputContext = inputContext;\n\n    this.camera.matrixAutoUpdate = false;\n\n    this.scene.add(this.reticle);\n    this.scene.add(this.dolly);\n\n    // NOTE: XRDevice is being removed\n    // @see https://github.com/immersive-web/webxr/pull/405\n    this[$devicePromise] = this.resolveDevice()\n                               .then((device) => {\n                                 return this[$device] = device;\n                               })\n                               .catch((error) => {\n                                 console.warn(error);\n                                 console.warn('Browser AR will be disabled');\n                               });\n  }\n\n  initializeRenderer() {\n    if (this.renderer != null) {\n      return;\n    }\n\n    this.renderer = new WebGLRenderer(\n        {canvas: this.inputCanvas, context: this.inputContext});\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.renderer.setPixelRatio(1);\n    this.renderer.autoClear = false;\n    this.renderer.gammaOutput = true;\n    this.renderer.gammaFactor = 2.2;\n  }\n\n  async resolveDevice(): Promise<XRDevice> {\n    assertIsArCandidate();\n\n    return await navigator.xr!.requestDevice();\n  }\n\n  async resolveARSession(): Promise<XRSession> {\n    assertIsArCandidate();\n\n    const device = this[$device];\n\n    const session: XRSession = await device!.requestSession(\n        {environmentIntegration: true, outputContext: this.outputContext!} as\n        any);\n\n    const gl: WebGLRenderingContext =\n        assertContext(this.renderer!.getContext());\n\n    // `makeXRCompatible` replaced `setCompatibleXRDevice` in Chrome M73\n    // @TODO #293, handle WebXR API changes\n    if ('setCompatibleXRDevice' in gl) {\n      await gl.setCompatibleXRDevice(device!);\n    } else {\n      await (gl as any).makeXRCompatible();\n    }\n\n    session.baseLayer = new XRWebGLLayer(session, gl, {alpha: true});\n    (this.renderer as any)\n        .setFramebuffer((session.baseLayer as XRWebGLLayer).framebuffer);\n\n    return session;\n  }\n\n  /**\n   * The currently presented scene, if any\n   */\n  get presentedScene() {\n    return this[$presentedScene];\n  }\n\n  /**\n   * Resolves to true if the renderer has detected all the necessary qualities\n   * to support presentation in AR.\n   */\n  async supportsPresentation() {\n    try {\n      assertIsArCandidate();\n\n      const device: XRDevice = await this[$devicePromise] as XRDevice;\n      await device.supportsSession(\n          {environmentIntegration: true, outputContext: this.outputContext!} as\n          any);\n\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Present a scene in AR\n   */\n  async present(scene: ModelScene): Promise<HTMLCanvasElement> {\n    if (this.isPresenting) {\n      console.warn('Cannot present while a model is already presenting');\n      return this.outputCanvas;\n    }\n\n    scene.model.scale.set(1, 1, 1);\n\n    this[$presentedScene] = scene;\n\n    this.initializeRenderer();\n\n    this[$currentSession] = await this.resolveARSession();\n    this[$currentSession]!.addEventListener('end', () => {\n      this[$postSessionCleanup]();\n    }, {once: true});\n\n    // `requestReferenceSpace` replaced `requestFrameOfReference` in Chrome M73\n    // @TODO #293, handle WebXR API changes\n    this[$refSpace] = await (\n        'requestFrameOfReference' in this[$currentSession]!?\n            (this[$currentSession] as any)\n                .requestFrameOfReference('eye-level') :\n            this[$currentSession]!.requestReferenceSpace({\n              type: 'stationary',\n              subtype: 'eye-level',\n            } as any));\n\n    this[$tick]();\n\n    return this.outputCanvas;\n  }\n\n  /**\n   * If currently presenting a scene in AR, stops presentation and exits AR.\n   */\n  async stopPresenting() {\n    if (!this.isPresenting) {\n      return;\n    }\n\n    const cleanupPromise = new Promise((resolve) => {\n      this[$resolveCleanup] = resolve;\n    });\n\n    try {\n      const session = this[$currentSession]!;\n      this[$currentSession] = null;\n      session.cancelAnimationFrame(this[$rafId]!);\n\n      await session.end();\n      await cleanupPromise;\n    } catch (error) {\n      console.warn('Error while trying to end AR session');\n      console.warn(error);\n\n      this[$postSessionCleanup]();\n    }\n  }\n\n  [$postSessionCleanup]() {\n    if (this[$presentedScene] != null) {\n      this.dolly.remove(this[$presentedScene]!);\n      this[$presentedScene]!.updateFraming();\n      this[$presentedScene]!.alignModel();\n    }\n\n    this[$refSpace] = null;\n    this[$presentedScene] = null;\n\n    if (this.outputCanvas.parentNode != null) {\n      this.outputCanvas.parentNode.removeChild(this.outputCanvas);\n    }\n\n    if (this[$resolveCleanup] != null) {\n      this[$resolveCleanup]!();\n    }\n  }\n\n  /**\n   * True if a scene is currently in the process of being presented in AR\n   */\n  get isPresenting(): boolean {\n    return this[$presentedScene] != null;\n  }\n\n  get outputCanvas(): HTMLCanvasElement {\n    if (this[$outputCanvas] == null) {\n      this[$outputCanvas] = document.createElement('canvas');\n      this[$outputCanvas]!.setAttribute('style', `\ndisplay: block;\nposition: absolute;\ntop: 0px;\nleft: 0px;\nwidth: 100%;\nheight: 100%;`);\n    }\n\n    return this[$outputCanvas]!;\n  }\n\n  get outputContext() {\n    if (this[$outputContext] == null) {\n      this[$outputContext] =\n          this.outputCanvas.getContext('xrpresent') as WebGLRenderingContext;\n    }\n\n    return this[$outputContext];\n  }\n\n  async placeModel() {\n    if (this[$currentSession] == null) {\n      return;\n    }\n\n    if (this.raycaster == null) {\n      this.raycaster = new Raycaster();\n    }\n\n    // NOTE: Currently rays will be cast from the middle of the screen.\n    // Eventually we might use input coordinates for this.\n    this.raycaster.setFromCamera({x: 0, y: 0}, this.camera);\n    const ray = this.raycaster.ray;\n    originArray.set(ray.origin.toArray());\n    directionArray.set(ray.direction.toArray());\n\n    let hits;\n    try {\n      hits = await (this[$currentSession] as any)\n                 .requestHitTest(originArray, directionArray, this[$refSpace]);\n    } catch (e) {\n      // Spec says this should no longer throw on invalid requests:\n      // https://github.com/immersive-web/hit-test/issues/24\n      // But in practice, it will still happen, so just ignore:\n      // https://github.com/immersive-web/hit-test/issues/37\n    }\n\n    if (hits && hits.length) {\n      const presentedScene = this[$presentedScene]!;\n      const hit = hits[0];\n      const hitMatrix = matrix4.fromArray(hit.hitMatrix);\n\n      this.dolly.position.setFromMatrixPosition(hitMatrix);\n\n      // Orient the dolly/model to face the camera\n      const camPosition = vector3.setFromMatrixPosition(this.camera.matrix);\n      this.dolly.lookAt(camPosition.x, this.dolly.position.y, camPosition.z);\n      this.dolly.rotateY(-presentedScene.pivot.rotation.y);\n\n      this.dolly.add(presentedScene);\n\n      this.dispatchEvent({type: 'modelmove'});\n    }\n  }\n\n  /**\n   * It appears that XRSession's `inputsourceschange` event is not implemented\n   * in Chrome Canary as of m72 for 'screen' inputs, which would be preferable\n   * since we only need an \"select\" event, rather than track a pose on every\n   * frame (like a 6DOF controller). Due to this bug, on every frame, check to\n   * see if an input exists.\n   * @see https://bugs.chromium.org/p/chromium/issues/detail?id=913703\n   * @see https://immersive-web.github.io/webxr/#xrinputsource-interface\n   */\n  processXRInput(frame: XRFrame) {\n    const {session} = frame;\n\n    // Get current input sources. For now, only 'screen' input is supported,\n    // which is only added to the session's active input sources immediately\n    // before `selectstart` and removed immediately after `selectend` event.\n    // If we have a 'screen' source here, it means the output canvas was tapped.\n    const sources = session.getInputSources().filter(\n        input => input.targetRayMode === 'screen');\n\n    if (sources.length === 0) {\n      return;\n    }\n\n    const pose = (frame as any).getInputPose(sources[0], this[$refSpace])\n    if (pose) {\n      this.placeModel();\n    }\n  }\n\n  [$tick]() {\n    this[$rafId] = this[$currentSession]!.requestAnimationFrame(\n        (time, frame) => this[$onWebXRFrame](time, frame));\n  }\n\n  [$onWebXRFrame](_time: number, frame: XRFrame) {\n    const {session} = frame;\n\n    // `getViewerPose` replaced `getDevicePose` in Chrome M73\n    // @TODO #293, handle WebXR API changes\n    const pose = 'getDevicePose' in frame ?\n        (frame as any).getDevicePose(this[$refSpace]) :\n        (frame as any).getViewerPose(this[$refSpace]);\n\n    // TODO: Notify external observers of tick\n    // TODO: Note that reticle may be \"stabilized\"\n\n    this[$tick]();\n\n    if (pose == null) {\n      return;\n    }\n\n    for (const view of (frame as any).views) {\n      const viewport = (session.baseLayer as XRWebGLLayer).getViewport(view);\n      this.renderer!.setViewport(0, 0, viewport.width, viewport.height);\n      this.renderer!.setSize(viewport.width, viewport.height, false);\n      this.camera.projectionMatrix.fromArray(view.projectionMatrix);\n      const viewMatrix = matrix4.fromArray(pose.getViewMatrix(view));\n\n      this.camera.matrix.getInverse(viewMatrix);\n      this.camera.updateMatrixWorld(true);\n\n      // NOTE: Updating input or the reticle is dependent on the camera's\n      // pose, hence updating these elements after camera update but\n      // before render.\n      this.reticle.update(this[$currentSession]!, this[$refSpace] as any);\n      this.processXRInput(frame);\n\n      // NOTE: Clearing depth caused issues on Samsung devices\n      // @see https://github.com/googlecodelabs/ar-with-webxr/issues/8\n      // this.renderer.clearDepth();\n      this.renderer!.render(this.scene, this.camera);\n    }\n  }\n}\n"]}