{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../src/test/helpers.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {EventDispatcher, Texture} from 'three';\nimport {deserializeUrl} from '../utilities.js';\n\nexport const elementFromLocalPoint =\n    (document: Document|ShadowRoot, x: number, y: number): Element|null => {\n      const host = (document === window.document) ?\n          window.document.body :\n          (document as ShadowRoot).host;\n      const actualDocument =\n          (window as any).ShadyCSS ? window.document : document;\n      const boundingRect = host.getBoundingClientRect();\n\n      return actualDocument.elementFromPoint(\n          boundingRect.left + x, boundingRect.top + y);\n    };\n\nexport const pickShadowDescendant =\n    (element: Element, x: number = 0, y: number = 0): Element|null => {\n      return element.shadowRoot != null ?\n          elementFromLocalPoint(element.shadowRoot, x, y) :\n          null;\n    };\n\nexport const timePasses = (ms: number = 0): Promise<void> =>\n    new Promise(resolve => setTimeout(resolve, ms));\n\nexport type PredicateFunction<T = void> = (value: T) => boolean;\n\n/**\n * Three.js EventDispatcher and DOM EventTarget use different event patterns,\n * so AnyEvent covers the shape of both event types.\n */\nexport type AnyEvent = Event|CustomEvent<any>|{[index: string]: string};\n\nexport const until =\n    async (predicate: PredicateFunction) => {\n  while (!predicate()) {\n    await timePasses();\n  }\n}\n\nexport const rafPasses = (): Promise<void> =>\n    new Promise(resolve => requestAnimationFrame(() => resolve()));\n\n/**\n * Takes a texture and an object and returns a boolean indicating\n * if whether or not the texture's userData matches the fields\n * defined on the `meta` object.\n *\n * @param {THREE.Texture}\n * @param {Object}\n * @return {boolean}\n */\nexport const textureMatchesMeta =\n    (texture: Texture, meta: {[index: string]: any}): boolean =>\n        !!(texture && (texture as any).userData &&\n           Object.keys(meta).reduce((matches, key) => {\n             return matches && meta[key] === (texture as any).userData[key];\n           }, true));\n\n/**\n * @param {EventTarget|EventDispatcher} target\n * @param {string} eventName\n * @param {?Function} predicate\n */\nexport const waitForEvent = <T extends AnyEvent = Event>(\n    target: EventTarget|EventDispatcher,\n    eventName: string,\n    predicate: PredicateFunction<T>|null = null): Promise<T> =>\n    new Promise(resolve => {\n      function handler(event: AnyEvent) {\n        if (!predicate || predicate(event as T)) {\n          resolve(event as T);\n          target.removeEventListener(eventName, handler);\n        }\n      }\n      target.addEventListener(eventName, handler);\n    });\n\nexport interface SyntheticEventProperties {\n  clientX?: number;\n  clientY?: number;\n  deltaY?: number;\n  keyCode?: number;\n}\n\n/**\n * Dispatch a synthetic event on a given element with a given type, and\n * optionally with custom event properties. Returns the dispatched event.\n *\n * @param {HTMLElement} element\n * @param {type} string\n * @param {*} properties\n */\nexport const dispatchSyntheticEvent =\n    (target: EventTarget, type: string, properties: SyntheticEventProperties = {\n      clientX: 0,\n      clientY: 0,\n      deltaY: 1.0\n    }): CustomEvent => {\n      const event = new CustomEvent(type, {cancelable: true, bubbles: true});\n      Object.assign(event, properties);\n      target.dispatchEvent(event);\n      return event;\n    };\n\n\nexport const ASSETS_DIRECTORY = '../examples/assets/';\n\n/**\n * Returns the full path for an asset by name. This is a convenience helper so\n * that we don't need to change paths throughout all test suites if we ever\n * decide to move files around.\n *\n * @param {string} name\n * @return {string}\n */\nexport const assetPath = (name: string): string =>\n    deserializeUrl(`${ASSETS_DIRECTORY}${name}`)!;\n\n\n/**\n * Returns true if the given element is in the tree of the document of the\n * current frame.\n *\n * @param {HTMLElement} element\n * @return {boolean}\n */\nexport const isInDocumentTree = (node: Node): boolean => {\n  let root: Node = node.getRootNode();\n\n  while (root !== node && root != null) {\n    if (root.nodeType === Node.DOCUMENT_NODE) {\n      return root === document;\n    }\n\n    root = (root as ShadowRoot).host && (root as ShadowRoot).host.getRootNode();\n  }\n\n  return false;\n};\n"]}