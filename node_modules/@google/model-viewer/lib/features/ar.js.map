{"version":3,"file":"ar.js","sourceRoot":"","sources":["../../src/features/ar.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {property} from 'lit-element';\n\nimport {IS_ANDROID, IS_AR_QUICKLOOK_CANDIDATE, IS_IOS, IS_IOS_CHROME, IS_IOS_SAFARI, IS_WEBXR_AR_CANDIDATE} from '../constants.js';\nimport {enumerationDeserializer} from '../conversions.js';\nimport ModelViewerElementBase, {$container, $renderer, $scene} from '../model-viewer-base.js';\nimport {Constructor, deserializeUrl} from '../utilities.js';\n\n/**\n * Takes a URL to a USDZ file and sets the appropriate fields so that Safari\n * iOS can intent to their AR Quick Look.\n */\nexport const openIOSARQuickLook = (() => {\n  const anchor = document.createElement('a');\n  anchor.setAttribute('rel', 'ar');\n  anchor.appendChild(document.createElement('img'));\n\n  return (usdzSrc: string) => {\n    anchor.setAttribute('href', usdzSrc);\n    anchor.click();\n  };\n})();\n\nexport const openARViewer = (() => {\n  const anchor = document.createElement('a');\n  const noArViewerSigil = '#model-viewer-no-ar-fallback';\n  let fallbackInvoked = false;\n\n  return (gltfSrc: string, title: string) => {\n    // If the fallback has ever been invoked this session, bounce early:\n    if (fallbackInvoked) {\n      return;\n    }\n\n    const location = self.location.toString();\n    const locationUrl = new URL(location);\n    const modelUrl = new URL(gltfSrc);\n    const link = encodeURIComponent(location);\n    const scheme = modelUrl.protocol.replace(':', '');\n\n    locationUrl.hash = noArViewerSigil;\n\n    title = encodeURIComponent(title);\n    modelUrl.protocol = 'intent://';\n\n    const intent = `${modelUrl.toString()}?link=${link}&title=${\n        title}#Intent;scheme=${\n        scheme};package=com.google.ar.core;action=android.intent.action.VIEW;S.browser_fallback_url=${\n        encodeURIComponent(locationUrl.toString())};end;`;\n\n    const undoHashChange = () => {\n      if (self.location.hash === noArViewerSigil && !fallbackInvoked) {\n        fallbackInvoked = true;\n        // The new history will be the current URL with a new hash.\n        // Go back one step so that we reset to the expected URL.\n        // NOTE(cdata): this should not invoke any browser-level navigation\n        // because hash-only changes modify the URL in-place without\n        // navigating:\n        self.history.back();\n      }\n    };\n\n    self.addEventListener('hashchange', undoHashChange, {once: true});\n\n    anchor.setAttribute('href', intent);\n    anchor.click();\n  };\n})();\n\nexport type QuickLookBrowser = 'safari'|'chrome';\n\nconst deserializeQuickLookBrowsers =\n    enumerationDeserializer<QuickLookBrowser>(['safari', 'chrome']);\n\nexport type ARMode = 'quick-look'|'ar-viewer'|'unstable-webxr'|'none';\n\nconst ARMode: {[index: string]: ARMode} = {\n  QUICK_LOOK: 'quick-look',\n  AR_VIEWER: 'ar-viewer',\n  UNSTABLE_WEBXR: 'unstable-webxr',\n  NONE: 'none'\n};\n\nconst $exitFullscreenButtonContainer = Symbol('exitFullscreenButtonContainer');\nconst $arButtonContainer = Symbol('arButtonContainer');\nconst $defaultExitFullscreenButton = Symbol('defaultExitFullscreenButton');\nconst $enterARWithWebXR = Symbol('enterARWithWebXR');\nconst $canActivateAR = Symbol('canActivateAR');\nconst $arMode = Symbol('arMode');\nconst $canLaunchQuickLook = Symbol('canLaunchQuickLook');\nconst $quickLookBrowsers = Symbol('quickLookBrowsers');\n\nconst $arButtonContainerFallbackClickHandler =\n    Symbol('arButtonContainerFallbackClickHandler');\nconst $onARButtonContainerFallbackClick =\n    Symbol('onARButtonContainerFallbackClick');\nconst $arButtonContainerClickHandler = Symbol('arButtonContainerClickHandler');\nconst $onARButtonContainerClick = Symbol('onARButtonContainerClick');\n\nconst $exitFullscreenButtonContainerClickHandler =\n    Symbol('exitFullscreenButtonContainerClickHandler');\nconst $onExitFullscreenButtonClick = Symbol('onExitFullscreenButtonClick');\n\nconst $fullscreenchangeHandler = Symbol('fullscreenHandler');\nconst $onFullscreenchange = Symbol('onFullscreen');\n\nexport interface ARInterface {\n  ar: boolean;\n  unstableWebxr: boolean;\n  iosSrc: string|null;\n  quickLookBrowsers: string;\n  readonly canActivateAR: boolean;\n  activateAR(): Promise<void>;\n}\n\nexport const ARMixin = (ModelViewerElement:\n                            Constructor<ModelViewerElementBase>):\n    Constructor<ModelViewerElementBase&ARInterface> => {\n      class ARModelViewerElement extends ModelViewerElement {\n        @property({type: Boolean, attribute: 'ar'}) ar: boolean = false;\n\n        @property({type: Boolean, attribute: 'unstable-webxr'})\n        unstableWebxr: boolean = false;\n\n        @property(\n            {converter: {fromAttribute: deserializeUrl}, attribute: 'ios-src'})\n        iosSrc: string|null = null;\n\n        @property({type: String, attribute: 'quick-look-browsers'})\n        quickLookBrowsers: string = 'safari';\n\n        get canActivateAR(): boolean {\n          return this[$arMode] !== ARMode.NONE;\n        }\n\n        protected[$canActivateAR]: boolean = false;\n\n        // TODO: Add this to the shadow root as part of this mixin's\n        // implementation:\n        protected[$arButtonContainer]: HTMLElement =\n            this.shadowRoot!.querySelector('.ar-button') as HTMLElement;\n\n        protected[$exitFullscreenButtonContainer]: HTMLElement =\n            this.shadowRoot!.querySelector('.slot.exit-fullscreen-button') as\n            HTMLElement;\n        protected[$defaultExitFullscreenButton]: HTMLElement =\n            this.shadowRoot!.querySelector('#default-exit-fullscreen-button') as\n            HTMLElement;\n\n        // NOTE(cdata): We use a second, separate \"fallback\" click handler in\n        // order to work around a regression in how Chrome on Android behaves\n        // when requesting fullscreen at the same time as triggering an intent.\n        // As of m76, intents could no longer be triggered successfully if they\n        // were dispatched in the same handler as the fullscreen request. The\n        // workaround is to split both effects into their own event handlers.\n        // @see https://github.com/GoogleWebComponents/model-viewer/issues/693\n        protected[$arButtonContainerFallbackClickHandler] = (event: Event) =>\n            this[$onARButtonContainerFallbackClick](event);\n\n        protected[$arButtonContainerClickHandler]: (event: Event) => void =\n            (event) => this[$onARButtonContainerClick](event);\n\n        protected[$exitFullscreenButtonContainerClickHandler]:\n            () => void = () => this[$onExitFullscreenButtonClick]();\n\n        protected[$fullscreenchangeHandler]:\n            () => void = () => this[$onFullscreenchange]();\n\n        protected[$arMode]: ARMode = ARMode.NONE;\n\n        protected[$quickLookBrowsers]: Set<QuickLookBrowser> = new Set();\n\n        /**\n         * Activates AR. Note that for any mode that is not WebXR-based, this\n         * method most likely has to be called synchronous from a user\n         * interaction handler. Otherwise, attempts to activate modes that\n         * require user interaction will most likely be ignored.\n         */\n        async activateAR() {\n          switch (this[$arMode]) {\n            case ARMode.QUICK_LOOK:\n              openIOSARQuickLook(this.iosSrc!);\n              break;\n            case ARMode.UNSTABLE_WEBXR:\n              await this[$enterARWithWebXR]();\n              break;\n            case ARMode.AR_VIEWER:\n              openARViewer(this.src!, this.alt || '');\n              break;\n            default:\n              console.warn(\n                  'No AR Mode can be activated. This is probably due to missing \\\nconfiguration or device capabilities');\n              break;\n          }\n        }\n\n        connectedCallback() {\n          super.connectedCallback();\n          document.addEventListener(\n              'fullscreenchange', this[$fullscreenchangeHandler]);\n        }\n\n        disconnectedCallback() {\n          super.disconnectedCallback();\n          document.removeEventListener(\n              'fullscreenchange', this[$fullscreenchangeHandler]);\n        }\n\n        [$onExitFullscreenButtonClick]() {\n          if (document.fullscreenElement === this) {\n            document.exitFullscreen();\n          }\n        }\n\n        [$onFullscreenchange]() {\n          const renderer = this[$renderer];\n          const scene = this[$scene];\n          const isFullscreen = document.fullscreenElement === this;\n\n          if (isFullscreen) {\n            this[$container].classList.add('fullscreen');\n          } else {\n            this[$container].classList.remove('fullscreen');\n          }\n\n          if (document.fullscreenElement !== this &&\n              renderer.presentedScene === scene) {\n            try {\n              renderer.stopPresenting();\n            } catch (error) {\n              console.warn('Unexpected error while stopping AR presentation');\n              console.error(error);\n            }\n          }\n        }\n\n        protected async[$enterARWithWebXR]() {\n          const renderer = this[$renderer];\n\n          console.log('Attempting to enter fullscreen and present in AR...');\n\n          try {\n            const enterFullscreen = this.requestFullscreen();\n\n            try {\n              const outputElement = await renderer.present(this[$scene]);\n              this.shadowRoot!.appendChild(outputElement);\n              await enterFullscreen;\n            } catch (error) {\n              console.warn('Error while trying to present to AR');\n              console.error(error);\n              await enterFullscreen;\n              if (document.fullscreenElement === this) {\n                console.warn('Exiting fullscreen under dire circumstances');\n                document.exitFullscreen();\n              }\n            }\n          } catch (error) {\n            console.error(error);\n            console.warn('AR will not activate without fullscreen permission');\n          }\n        }\n\n        async update(changedProperties: Map<string, any>) {\n          super.update(changedProperties);\n\n          if (changedProperties.has('quickLookBrowsers')) {\n            this[$quickLookBrowsers] =\n                deserializeQuickLookBrowsers(this.quickLookBrowsers);\n          }\n\n          if (!changedProperties.has('unstableWebxr') &&\n              !changedProperties.has('iosSrc') &&\n              !changedProperties.has('ar') && !changedProperties.has('src') &&\n              !changedProperties.has('alt')) {\n            return;\n          }\n\n          const renderer = this[$renderer];\n          const unstableWebxrCandidate = this.unstableWebxr &&\n              IS_WEBXR_AR_CANDIDATE && await renderer.supportsPresentation();\n          const arViewerCandidate = IS_ANDROID && this.ar;\n          const iosQuickLookCandidate = IS_IOS && IS_AR_QUICKLOOK_CANDIDATE &&\n              this[$canLaunchQuickLook] && !!this.iosSrc;\n\n          const showArButton = unstableWebxrCandidate || arViewerCandidate ||\n              iosQuickLookCandidate;\n\n          if (unstableWebxrCandidate) {\n            this[$arMode] = ARMode.UNSTABLE_WEBXR;\n          } else if (arViewerCandidate) {\n            this[$arMode] = ARMode.AR_VIEWER;\n          } else if (iosQuickLookCandidate) {\n            this[$arMode] = ARMode.QUICK_LOOK;\n          } else {\n            this[$arMode] = ARMode.NONE;\n          }\n\n          if (showArButton) {\n            this[$arButtonContainer].classList.add('enabled');\n            // NOTE(cdata): The order of the two click handlers on the \"ar\n            // button container\" is important, vital to the workaround described\n            // earlier in this file. Reversing their order will cause our Scene\n            // Viewer integration to break.\n            // @see https://github.com/GoogleWebComponents/model-viewer/issues/693\n            this[$arButtonContainer].addEventListener(\n                'click', this[$arButtonContainerClickHandler]);\n            this[$arButtonContainer].addEventListener(\n                'click', this[$arButtonContainerFallbackClickHandler]);\n            this[$exitFullscreenButtonContainer].addEventListener(\n                'click', this[$exitFullscreenButtonContainerClickHandler]);\n          } else {\n            this[$arButtonContainer].removeEventListener(\n                'click', this[$arButtonContainerClickHandler]);\n            this[$arButtonContainer].removeEventListener(\n                'click', this[$arButtonContainerFallbackClickHandler]);\n            this[$exitFullscreenButtonContainer].removeEventListener(\n                'click', this[$exitFullscreenButtonContainerClickHandler]);\n            this[$arButtonContainer].classList.remove('enabled');\n          }\n        }\n\n        [$onARButtonContainerFallbackClick](_event: Event) {\n          if (this[$arMode] === ARMode.AR_VIEWER) {\n            this.requestFullscreen();\n          }\n        }\n\n        [$onARButtonContainerClick](event: Event) {\n          event.preventDefault();\n          this.activateAR();\n        }\n\n        get[$canLaunchQuickLook](): boolean {\n          if (IS_IOS_CHROME) {\n            return this[$quickLookBrowsers].has('chrome');\n          } else if (IS_IOS_SAFARI) {\n            return this[$quickLookBrowsers].has('safari');\n          }\n\n          return false;\n        }\n      }\n\n      return ARModelViewerElement;\n    }\n"]}