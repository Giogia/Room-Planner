{"version":3,"file":"controls.js","sourceRoot":"","sources":["../../src/features/controls.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {property} from 'lit-element';\nimport {Event, Spherical} from 'three';\n\nimport {deserializeAngleToDeg, deserializeSpherical} from '../conversions.js';\nimport ModelViewerElementBase, {$ariaLabel, $needsRender, $onModelLoad, $onResize, $onUserModelOrbit, $scene, $tick} from '../model-viewer-base.js';\nimport {ChangeEvent, SmoothControls} from '../three-components/SmoothControls.js';\nimport {Constructor} from '../utilities.js';\n\nexport interface SphericalPosition {\n  theta: number;  // equator angle around the y (up) axis.\n  phi: number;    // polar angle from the y (up) axis.\n  radius: number;\n}\n\nexport type InteractionPromptStrategy = 'auto'|'when-focused';\n\nconst InteractionPromptStrategy:\n    {[index: string]: InteractionPromptStrategy} = {\n      AUTO: 'auto',\n      WHEN_FOCUSED: 'when-focused'\n    };\n\nexport const DEFAULT_CAMERA_ORBIT = '0deg 75deg auto';\nconst DEFAULT_FIELD_OF_VIEW = '45deg';\n\nconst HALF_PI = Math.PI / 2.0;\nconst THIRD_PI = Math.PI / 3.0;\nconst QUARTER_PI = HALF_PI / 2.0;\nconst PHI = 2.0 * Math.PI;\n\nconst AZIMUTHAL_QUADRANT_LABELS = ['front', 'right', 'back', 'left'];\nconst POLAR_TRIENT_LABELS = ['upper-', '', 'lower-'];\n\nexport const DEFAULT_INTERACTION_PROMPT_THRESHOLD = 3000;\nexport const INTERACTION_PROMPT =\n    'Use mouse, touch or arrow keys to control the camera!';\n\nexport const $controls = Symbol('controls');\nexport const $promptElement = Symbol('promptElement');\nexport const $idealCameraDistance = Symbol('idealCameraDistance');\n\nconst $deferInteractionPrompt = Symbol('deferInteractionPrompt');\nconst $updateAria = Symbol('updateAria');\nconst $updateCamera = Symbol('updateCamera');\nconst $updateCameraOrbit = Symbol('updateCameraOrbit');\nconst $updateFieldOfView = Symbol('updateFieldOfView');\n\nconst $blurHandler = Symbol('blurHandler');\nconst $focusHandler = Symbol('focusHandler');\nconst $changeHandler = Symbol('changeHandler');\nconst $promptTransitionendHandler = Symbol('promptTransitionendHandler');\n\nconst $onBlur = Symbol('onBlur');\nconst $onFocus = Symbol('onFocus');\nconst $onChange = Symbol('onChange');\nconst $onPromptTransitionend = Symbol('onPromptTransitionend');\n\nconst $shouldPromptUserToInteract = Symbol('shouldPromptUserToInteract');\nconst $waitingToPromptUser = Symbol('waitingToPromptUser');\nconst $userPromptedOnce = Symbol('userPromptedOnce');\nconst $idleTime = Symbol('idleTime');\n\nconst $lastSpherical = Symbol('lastSpherical');\nconst $jumpCamera = Symbol('jumpCamera');\n\nexport interface ControlsInterface {\n  cameraControls: boolean;\n  cameraOrbit: string;\n  fieldOfView: string;\n  interactionPrompt: InteractionPromptStrategy;\n  interactionPromptThreshold: number;\n  getCameraOrbit(): SphericalPosition;\n  getFieldOfView(): number;\n  jumpCameraToGoal(): void;\n}\n\nexport const ControlsMixin = (ModelViewerElement:\n                                  Constructor<ModelViewerElementBase>):\n    Constructor<ModelViewerElementBase&ControlsInterface> => {\n      class ControlsModelViewerElement extends ModelViewerElement {\n        @property({type: Boolean, attribute: 'camera-controls'})\n        cameraControls: boolean = false;\n\n        @property(\n            {type: String, attribute: 'camera-orbit', hasChanged: () => true})\n        cameraOrbit: string = DEFAULT_CAMERA_ORBIT;\n\n        @property(\n            {type: String, attribute: 'field-of-view', hasChanged: () => true})\n        fieldOfView: string = DEFAULT_FIELD_OF_VIEW;\n\n        @property({type: Number, attribute: 'interaction-prompt-threshold'})\n        interactionPromptThreshold: number =\n            DEFAULT_INTERACTION_PROMPT_THRESHOLD;\n\n        @property({type: String, attribute: 'interaction-prompt'})\n        interactionPrompt: InteractionPromptStrategy =\n            InteractionPromptStrategy.WHEN_FOCUSED;\n\n        protected[$promptElement]: Element;\n\n        protected[$idleTime] = 0;\n        protected[$userPromptedOnce] = false;\n        protected[$waitingToPromptUser] = false;\n        protected[$shouldPromptUserToInteract] = true;\n\n        protected[$controls]: SmoothControls;\n\n        protected[$idealCameraDistance]: number|null = null;\n        protected[$lastSpherical] = new Spherical();\n        protected[$jumpCamera] = false;\n\n        protected[$changeHandler] = (event: Event) =>\n            this[$onChange](event as ChangeEvent);\n\n        protected[$focusHandler] = () => this[$onFocus]();\n        protected[$blurHandler] = () => this[$onBlur]();\n\n        protected[$promptTransitionendHandler] = () =>\n            this[$onPromptTransitionend]();\n\n        constructor() {\n          super();\n          const scene = (this as any)[$scene];\n\n          this[$promptElement] =\n              this.shadowRoot!.querySelector('.controls-prompt')!;\n\n          this[$controls] = new SmoothControls(scene.getCamera(), scene.canvas);\n          this[$updateCameraOrbit]();\n          this[$updateFieldOfView]();\n        }\n\n        getCameraOrbit(): SphericalPosition {\n          const {theta, phi, radius} = this[$lastSpherical];\n          return {theta, phi, radius};\n        }\n\n        getFieldOfView(): number {\n          return this[$controls].getFieldOfView();\n        }\n\n        jumpCameraToGoal() {\n          this[$jumpCamera] = true;\n        }\n\n        connectedCallback() {\n          super.connectedCallback();\n\n          this[$promptTransitionendHandler]();\n          this[$promptElement].addEventListener(\n              'transitionend', this[$promptTransitionendHandler]);\n\n          this[$controls].addEventListener('change', this[$changeHandler]);\n        }\n\n        disconnectedCallback() {\n          super.disconnectedCallback();\n\n          this[$promptElement].removeEventListener(\n              'transitionend', this[$promptTransitionendHandler]);\n          this[$controls].removeEventListener('change', this[$changeHandler]);\n        }\n\n        updated(changedProperties: Map<string, any>) {\n          super.updated(changedProperties);\n\n          const controls = this[$controls];\n          const scene = (this as any)[$scene];\n\n          if (changedProperties.has('cameraControls')) {\n            if (this.cameraControls) {\n              controls.enableInteraction();\n\n              scene.canvas.addEventListener('focus', this[$focusHandler]);\n              scene.canvas.addEventListener('blur', this[$blurHandler]);\n            } else {\n              scene.canvas.removeEventListener('focus', this[$focusHandler]);\n              scene.canvas.removeEventListener('blur', this[$blurHandler]);\n\n              controls.disableInteraction();\n            }\n          }\n\n          if (changedProperties.has('interactionPrompt')) {\n            if (this.interactionPrompt === InteractionPromptStrategy.AUTO) {\n              this[$waitingToPromptUser] = true;\n            }\n          }\n\n          if (changedProperties.has('cameraOrbit')) {\n            this[$updateCameraOrbit]();\n          }\n\n          if (changedProperties.has('fieldOfView')) {\n            this[$updateFieldOfView]();\n          }\n\n          if (this[$jumpCamera] === true) {\n            this[$controls].jumpToGoal();\n            this[$jumpCamera] = false;\n          }\n        }\n\n        [$updateFieldOfView]() {\n          let fov = deserializeAngleToDeg(this.fieldOfView);\n          if (fov == null) {\n            fov = deserializeAngleToDeg(DEFAULT_FIELD_OF_VIEW);\n          }\n          this[$controls].setFov(fov!);\n        }\n\n        [$updateCameraOrbit]() {\n          let sphericalValues = deserializeSpherical(this.cameraOrbit);\n\n          if (sphericalValues == null) {\n            sphericalValues = deserializeSpherical(DEFAULT_CAMERA_ORBIT)!;\n          }\n\n          let [theta, phi, radius] = sphericalValues;\n\n          if (typeof radius === 'string') {\n            switch (radius) {\n              default:\n              case 'auto':\n                radius = this[$idealCameraDistance]!;\n                break;\n            }\n          }\n          this[$controls].setOrbit(theta, phi, radius as number);\n        }\n\n        [$tick](time: number, delta: number) {\n          super[$tick](time, delta);\n\n          if (this[$waitingToPromptUser]) {\n            if (this.loaded) {\n              this[$idleTime] += delta;\n            }\n\n            if (this[$idleTime] > this.interactionPromptThreshold) {\n              (this as any)[$scene].canvas.setAttribute(\n                  'aria-label', INTERACTION_PROMPT);\n\n              // NOTE(cdata): After notifying users that the controls are\n              // available, we flag that the user has been prompted at least\n              // once, and then effectively stop the idle timer. If the camera\n              // orbit changes after this point, the user will never be prompted\n              // again for this particular <model-element> instance:\n              this[$userPromptedOnce] = true;\n              this[$waitingToPromptUser] = false;\n\n              this[$promptElement].classList.add('visible');\n            }\n          }\n\n          this[$controls].update(time, delta);\n        }\n\n        [$deferInteractionPrompt]() {\n          // Effectively cancel the timer waiting for user interaction:\n          this[$waitingToPromptUser] = false;\n          this[$promptElement]!.classList.remove('visible');\n\n          // Implicitly there was some reason to defer the prompt. If the user\n          // has been prompted at least once already, we no longer need to\n          // prompt the user, although if they have never been prompted we\n          // should probably prompt them at least once just in case.\n          if (this[$userPromptedOnce]) {\n            this[$shouldPromptUserToInteract] = false;\n          }\n        }\n\n        /**\n         * Changes the camera's radius to properly frame the scene based on\n         * changes to framedHeight or fov, and maintains relative camera zoom\n         * state.\n         */\n        [$updateCamera]() {\n          const scene = (this as any)[$scene];\n          const controls = this[$controls];\n          const framedHeight = scene.framedHeight;\n\n          // Make zoom sensitivity scale with model size:\n          const zoomSensitivity = framedHeight / 10;\n          const framedDistance = (framedHeight / 2) /\n              Math.tan((controls.getFieldOfView() / 2) * Math.PI / 180);\n          const near = framedHeight / 10.0;\n          const far = framedHeight * 10.0;\n\n          // When we update the idealCameraDistance due to reframing, we want to\n          // maintain the user's zoom level (how they have changed the camera\n          // radius), which we represent here as a ratio.\n          const zoom = (this[$idealCameraDistance] != null) ?\n              controls.getCameraSpherical().radius /\n                  this[$idealCameraDistance]! :\n              1;\n          this[$idealCameraDistance] = framedDistance + scene.modelDepth / 2;\n\n          controls.updateIntrinsics(near, far, scene.aspect, zoomSensitivity);\n\n          // Zooming out beyond the 'frame' doesn't serve much purpose\n          // and will only end up showing the skysphere if zoomed out enough\n          const minimumRadius = near + framedHeight / 2.0;\n          const maximumRadius = this[$idealCameraDistance]!;\n\n          controls.applyOptions({minimumRadius, maximumRadius});\n\n          controls.setRadius(zoom * this[$idealCameraDistance]!);\n          controls.setTarget(scene.target);\n          controls.jumpToGoal();\n        }\n\n        [$updateAria]() {\n          // NOTE(cdata): It is possible that we might want to record the\n          // last spherical when the label actually changed. Right now, the\n          // side-effect the current implementation is that we will only\n          // announce the first view change that occurs after the element\n          // becomes focused.\n          const {theta: lastTheta, phi: lastPhi} = this[$lastSpherical];\n          const {theta, phi} =\n              this[$controls]!.getCameraSpherical(this[$lastSpherical]);\n\n          const rootNode = this.getRootNode() as Document | ShadowRoot | null;\n\n          // Only change the aria-label if <model-viewer> is currently focused:\n          if (rootNode != null && rootNode.activeElement === this) {\n            const lastAzimuthalQuadrant =\n                (4 + Math.floor(((lastTheta % PHI) + QUARTER_PI) / HALF_PI)) %\n                4;\n            const azimuthalQuadrant =\n                (4 + Math.floor(((theta % PHI) + QUARTER_PI) / HALF_PI)) % 4;\n\n            const lastPolarTrient = Math.floor(lastPhi / THIRD_PI);\n            const polarTrient = Math.floor(phi / THIRD_PI);\n\n            if (azimuthalQuadrant !== lastAzimuthalQuadrant ||\n                polarTrient !== lastPolarTrient) {\n              const {canvas} = (this as any)[$scene];\n              const azimuthalQuadrantLabel =\n                  AZIMUTHAL_QUADRANT_LABELS[azimuthalQuadrant];\n              const polarTrientLabel = POLAR_TRIENT_LABELS[polarTrient];\n\n              const ariaLabel = `View from stage ${polarTrientLabel}${\n                  azimuthalQuadrantLabel}`;\n\n              canvas.setAttribute('aria-label', ariaLabel);\n            }\n          }\n        }\n\n        [$onPromptTransitionend]() {\n          const svg = this[$promptElement].querySelector('svg');\n\n          if (svg == null) {\n            return;\n          }\n\n          // NOTE(cdata): We need to make sure that SVG animations are paused\n          // when the prompt is not visible, otherwise we may a significant\n          // compositing cost even while the prompt is at opacity 0.\n          if (this[$promptElement].classList.contains('visible')) {\n            svg.unpauseAnimations();\n          } else {\n            svg.pauseAnimations();\n          }\n        }\n\n        [$onResize](event: any) {\n          super[$onResize](event);\n          this[$updateCamera]();\n        }\n\n        [$onModelLoad](event: any) {\n          super[$onModelLoad](event);\n          this[$updateCamera]();\n          this[$updateCameraOrbit]();\n          this[$controls].jumpToGoal();\n        }\n\n        [$onFocus]() {\n          const {canvas} = (this as any)[$scene];\n\n          // NOTE(cdata): On every re-focus, we switch the aria-label back to\n          // the original, non-prompt label if appropriate. If the user has\n          // already interacted, they no longer need to hear the prompt.\n          // Otherwise, they will hear it again after the idle prompt threshold\n          // has been crossed.\n          const ariaLabel = this[$ariaLabel];\n\n          if (canvas.getAttribute('aria-label') !== ariaLabel) {\n            canvas.setAttribute('aria-label', ariaLabel);\n          }\n\n          // NOTE(cdata): When focused, if the user has yet to interact with the\n          // camera controls (that is, we \"should\" prompt the user), we begin\n          // the idle timer and indicate that we are waiting for it to cross the\n          // prompt threshold:\n          if (this[$shouldPromptUserToInteract]) {\n            this[$waitingToPromptUser] = true;\n            this[$idleTime] = 0;\n          }\n        }\n\n        [$onBlur]() {\n          this[$waitingToPromptUser] = false;\n          this[$promptElement].classList.remove('visible');\n        }\n\n        [$onChange]({source}: ChangeEvent) {\n          if (this.interactionPrompt ===\n              InteractionPromptStrategy.WHEN_FOCUSED) {\n            this[$deferInteractionPrompt]();\n          }\n          this[$updateAria]();\n          this[$needsRender]();\n\n          if (source === 'user-interaction') {\n            if (this.interactionPrompt === InteractionPromptStrategy.AUTO) {\n              this[$deferInteractionPrompt]();\n            }\n            this[$onUserModelOrbit]();\n          }\n        }\n      }\n\n      return ControlsModelViewerElement;\n    };\n"]}